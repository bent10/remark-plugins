// Vitest Snapshot v1, https://vitest.dev/guide/snapshot.html

exports[`should not transform code blocks that do not have \`preview\` attribute 1`] = `
"\`\`\`jsx
<Foo />
\`\`\`
"
`;

exports[`should support mdx compiler 1`] = `
"import {Fragment as _Fragment, jsx as _jsx, jsxs as _jsxs} from "react/jsx-runtime";
import {Foo} from 'foo';
function _createMdxContent(props) {
  const _components = {
    code: "code",
    div: "div",
    figcaption: "figcaption",
    figure: "figure",
    h1: "h1",
    p: "p",
    pre: "pre",
    ...props.components
  };
  return _jsxs(_Fragment, {
    children: [_jsx(_components.h1, {
      children: "Example"
    }), "\\n", _jsxs(_components.figure, {
      className: "preview",
      children: [_jsx(_components.p, {
        children: _jsx(_components.figcaption, {
          children: "Code title"
        })
      }), _jsx(_components.div, {
        className: "preview-showcase",
        children: _jsx(Foo, {})
      }), _jsx(_components.div, {
        className: "preview-code",
        children: _jsx(_components.pre, {
          children: _jsx(_components.code, {
            className: "language-jsx",
            children: "<Foo />\\n"
          })
        })
      })]
    })]
  });
}
export default function MDXContent(props = {}) {
  const {wrapper: MDXLayout} = props.components || ({});
  return MDXLayout ? _jsx(MDXLayout, {
    ...props,
    children: _jsx(_createMdxContent, {
      ...props
    })
  }) : _createMdxContent(props);
}
"
`;

exports[`should transform code blocks into code previews 1`] = `
"<h1>Example</h1>
<figure class="preview">
<figcaption>Code title</figcaption>
<div class="preview-showcase">
<div class="foo">Hello, World!</div>
</div>
<div class="preview-code">
<pre><code class="language-html">&#x3C;div class='foo'>Hello, World!&#x3C;/div>
</code></pre>
</div>
</figure>"
`;

exports[`should use a custom template when provided in options 1`] = `
"<figure class='foo'>
<figcaption>{title}</figcaption>
<div class='foo-preview'>
<div class='foo'>Hello, World!</div>
</div>
<div class='foo-code'>

\`\`\`html
<div class='foo'>Hello, World!</div>
\`\`\`

</div>
</figure>
"
`;
